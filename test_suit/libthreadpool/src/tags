!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUSY_THRESHOLD	thread-pool.h	19;"	d
FALSE	thread-pool.h	16;"	d
MANAGE_INTERVAL	thread-pool.h	20;"	d
TPBOOL	thread-pool.h	/^typedef int TPBOOL;$/;"	t
TRUE	thread-pool.h	12;"	d
add_thread	thread-pool.h	/^	TPBOOL (*add_thread)(tp_thread_pool *this);$/;"	m	struct:tp_thread_pool_s
chnum	thread-pool.h	/^	int chnum;	\/\/channel num$/;"	m	struct:tp_work_desc_s
close	thread-pool.h	/^	void (*close)(tp_thread_pool *this);$/;"	m	struct:tp_thread_pool_s
creat_thread_pool	thread-pool.c	/^tp_thread_pool *creat_thread_pool(int min_num, int max_num){$/;"	f
cur_th_num	thread-pool.h	/^	int cur_th_num;		\/\/current thread number in the pool$/;"	m	struct:tp_thread_pool_s
delete_thread	thread-pool.h	/^	TPBOOL (*delete_thread)(tp_thread_pool *this);$/;"	m	struct:tp_thread_pool_s
get_thread_by_id	thread-pool.h	/^	int  (*get_thread_by_id)(tp_thread_pool *this, int id);$/;"	m	struct:tp_thread_pool_s
get_tp_status	thread-pool.h	/^	int (*get_tp_status)(tp_thread_pool *this);$/;"	m	struct:tp_thread_pool_s
init	thread-pool.h	/^	TPBOOL (*init)(tp_thread_pool *this);$/;"	m	struct:tp_thread_pool_s
inum	thread-pool.h	/^	char *inum;	\/\/call in$/;"	m	struct:tp_work_desc_s
is_busy	thread-pool.h	/^	TPBOOL  		is_busy;	\/\/thread status:true-busy;flase-idle$/;"	m	struct:tp_thread_info_s
manage_thread_id	thread-pool.h	/^	pthread_t manage_thread_id;	\/\/manage thread id num$/;"	m	struct:tp_thread_pool_s
max_th_num	thread-pool.h	/^	int max_th_num;         \/\/max thread number in the pool$/;"	m	struct:tp_thread_pool_s
min_th_num	thread-pool.h	/^	int min_th_num;		\/\/min thread number in the pool$/;"	m	struct:tp_thread_pool_s
onum	thread-pool.h	/^	char *onum;	\/\/call out$/;"	m	struct:tp_work_desc_s
process_job	thread-pool.h	/^	void (*process_job)(tp_thread_pool *this, tp_work *worker, tp_work_desc *job);$/;"	m	struct:tp_thread_pool_s
process_job	thread-pool.h	/^	void (*process_job)(tp_work *this, tp_work_desc *job);$/;"	m	struct:tp_work_s
th_job	thread-pool.h	/^	tp_work_desc		*th_job;$/;"	m	struct:tp_thread_info_s
th_work	thread-pool.h	/^	tp_work			*th_work;$/;"	m	struct:tp_thread_info_s
thread_cond	thread-pool.h	/^	pthread_cond_t          thread_cond;	$/;"	m	struct:tp_thread_info_s
thread_id	thread-pool.h	/^	pthread_t		thread_id;	\/\/thread id num$/;"	m	struct:tp_thread_info_s
thread_info	thread-pool.h	/^	tp_thread_info *thread_info;	\/\/work thread relative thread info$/;"	m	struct:tp_thread_pool_s
thread_lock	thread-pool.h	/^	pthread_mutex_t		thread_lock;$/;"	m	struct:tp_thread_info_s
tp_add_thread	thread-pool.c	/^static TPBOOL tp_add_thread(tp_thread_pool *this){$/;"	f	file:
tp_close	thread-pool.c	/^void tp_close(tp_thread_pool *this){$/;"	f
tp_delete_thread	thread-pool.c	/^static TPBOOL tp_delete_thread(tp_thread_pool *this){$/;"	f	file:
tp_get_thread_by_id	thread-pool.c	/^int tp_get_thread_by_id(tp_thread_pool *this, int id){$/;"	f
tp_get_tp_status	thread-pool.c	/^static int  tp_get_tp_status(tp_thread_pool *this){$/;"	f	file:
tp_init	thread-pool.c	/^TPBOOL tp_init(tp_thread_pool *this){$/;"	f
tp_lock	thread-pool.h	/^	pthread_mutex_t tp_lock;$/;"	m	struct:tp_thread_pool_s
tp_manage_thread	thread-pool.c	/^static void *tp_manage_thread(void *pthread){$/;"	f	file:
tp_process_job	thread-pool.c	/^void tp_process_job(tp_thread_pool *this, tp_work *worker, tp_work_desc *job){$/;"	f
tp_thread_info	thread-pool.h	/^typedef struct tp_thread_info_s tp_thread_info;$/;"	t	typeref:struct:tp_thread_info_s
tp_thread_info_s	thread-pool.h	/^struct tp_thread_info_s{$/;"	s
tp_thread_pool	thread-pool.h	/^typedef struct tp_thread_pool_s tp_thread_pool;$/;"	t	typeref:struct:tp_thread_pool_s
tp_thread_pool_s	thread-pool.h	/^struct tp_thread_pool_s{$/;"	s
tp_work	thread-pool.h	/^typedef struct tp_work_s tp_work;$/;"	t	typeref:struct:tp_work_s
tp_work_desc	thread-pool.h	/^typedef struct tp_work_desc_s tp_work_desc;$/;"	t	typeref:struct:tp_work_desc_s
tp_work_desc_s	thread-pool.h	/^struct tp_work_desc_s{$/;"	s
tp_work_s	thread-pool.h	/^struct tp_work_s{$/;"	s
tp_work_thread	thread-pool.c	/^static void *tp_work_thread(void *pthread){$/;"	f	file:
